{
  "users": [
    {
      "id": "_b67bcbf5ccd12",
      "login": "user@ya.ru",
      "password": "123456",
      "role": "writer"
    }
  ],
  "posts": [
    {
      "id": "36e6bb1",
      "title": "Что такое контейнер?",
      "description": "Помните старые добрые времена, когда вы использовали SSH на рабочем сервере, переходили в каталог проекта и запускали git pullдля развертывания своего кода? Прежде чем что-либо развертывать, в самом начале жизни вашего сервера вы должны установить все глобальные зависимости для своего приложения, curlскорее всего, затем git, может быть, интерпретатор для языка, который вы хотите использовать, и некоторые расширения для этого, такие как ну, может быть, nginxв какой-то момент. После того, как все зависимости установлены, вы должны перенести свое приложение на сервер, выполнить несколько команд для установки и в конечном итоге запустить приложение.\nВ этот момент, как только вы перетащите свой код на сервер, вы запустите новую версию своего приложения или перезапустите Nginx, чтобы изменения вступили в силу, или что-то еще. Эта настройка, вероятно, работала в течение длительного времени, пока это не так. Один из разработчиков в вашей команде полагался на системную зависимость, для которой на рабочем сервере установлена ​​другая версия, и теперь ваша служба не работает. Вы быстро откатываете свои изменения, но вам нужно будет обновить эту зависимость в какой-то момент. Худшим примером могут быть ошибки, вызванные различного рода зависимостями в странном месте вашего приложения, что означает, что вы, вероятно, не заметите, пока не станет слишком поздно, другими словами, уже отправлены .\nРассмотрим другой пример, где вы хотите запускать несколько приложений на одном хосте, но вам нужно, чтобы они были изолированы по соображениям безопасности. Вам нужно либо перенести приложения на отдельные хосты, что неэффективно с точки зрения затрат, либо запустить на хосте две разные виртуальные машины, что обеспечит вам изоляцию, но ресурсы будут в основном использоваться виртуальными машинами, а не вашими. приложение, которое до сих пор не лучшим образом.\nЭти проблемы существуют уже десятилетия; разделение процессов - огромная боль, и это вызывало множество проблем с безопасностью, а также неэффективные установки в прошлом.\nLinux контейнеры на помощь\nВ этом контексте контейнер - это набор изолированных процессов и ресурсов. В Linux это достигается путем использования пространств имен, что позволяет процессам получать доступ только к ресурсам пространства имен, что позволяет иметь дерево процессов, полностью независимое от остальных систем. Реальная работа контейнеров - сложная тема, в которую я не буду вдаваться, но в целом концепция проста: предоставьте мне виртуализацию на уровне операционной системы (ОС), чтобы я мог поиграть с разными вещами изолированно.\nВведите Docker\nDocker - это один из инструментов, который использовал идею изолированных ресурсов для создания набора инструментов, который позволяет упаковывать приложения со всеми установленными зависимостями и запускать их в любом месте. Docker определяет контейнеры следующим образом:\nКонтейнер - это стандартная единица программного обеспечения, которая упаковывает код и все его зависимости, поэтому приложение работает быстро и надежно из одной вычислительной среды в другую.",
      "claps": 0,
      "createdAt": "2020-04-01T17:02:53.601Z",
      "updateAt": "2020-04-01T17:09:33.822Z",
      "userId": "_b67bcbf5ccd12"
    },
    {
      "id": "efaf10",
      "title": "Что такое npm и что такое пакеты?",
      "description": "Буквы npmобозначают «менеджер пакетов узлов». Когда вы работаете над проектом JavaScript, вы можете использовать npm для установки пакетов кода других людей в ваш собственный проект. Ваш проект может быть веб-проектом, таким как веб-сайт или веб-приложение, или это может быть серверный проект, использующий узел. Любой проект JavaScript может использовать npm для добавления пакетов существующего кода.\nNpm - это инструмент, который вы устанавливаете на свой компьютер. Это часть узла, поэтому установить версию LTS Узла , чтобы получить как nodeи npmкоманды в командной строке. Он должен быть установлен на каждом компьютере, где вы хотите работать над своим проектом, поэтому, если вы перемещаете свои файлы с помощью USB-накопителя, не забудьте эту часть!\nВы используете npm из командной строки для установки, удаления или обновления пакетов. Под «пакетом» я подразумеваю любой фрагмент кода, который кто-то решил опубликовать на npm.\nНекоторые примеры пакетов npm:\nугловатый\nреагировать\nJQuery\nЭкспресс\nSocket.io\nНа npm опубликованы тысячи пакетов. Вы можете просмотреть их на npmjs.com , но обычно вы можете найти рекомендуемые пакеты, выполнив поиск в Google или следуя сообщениям в блоге. Некоторые пакеты подходят только для веб-проектов, а некоторые - только для узловых проектов.",
      "claps": 0,
      "createdAt": "2020-04-01T17:07:58.867Z",
      "updateAt": null,
      "userId": "_b67bcbf5ccd12"
    }
  ]
}